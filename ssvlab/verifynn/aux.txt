int x1 = nondet_int();
__ESBMC_assume((x1 <= 255)&&(x1 >=0));
int x2 = nondet_int();
__ESBMC_assume((x2 <= 255)&&(x2 >=0));
int x3 = nondet_int();
__ESBMC_assume((x3 <= 255)&&(x3 >=0));
int x4 = nondet_int();
__ESBMC_assume((x4 <= 255)&&(x4 >=0));
int x5 = nondet_int();
__ESBMC_assume((x5 <= 255)&&(x5 >=0));
int x6 = nondet_int();
__ESBMC_assume((x6 <= 255)&&(x6 >=0));
int x7 = nondet_int();
__ESBMC_assume((x7 <= 255)&&(x7 >=0));
int x8 = nondet_int();
__ESBMC_assume((x8 <= 255)&&(x8 >=0));
int x9 = nondet_int();
__ESBMC_assume((x9 <= 255)&&(x9 >=0));
int x10 = nondet_int();
__ESBMC_assume((x10 <= 255)&&(x10 >=0));
int x11 = nondet_int();
__ESBMC_assume((x11 <= 255)&&(x11 >=0));
int x12 = nondet_int();
__ESBMC_assume((x12 <= 255)&&(x12 >=0));
int x13 = nondet_int();
__ESBMC_assume((x13 <= 255)&&(x13 >=0));
int x14 = nondet_int();
__ESBMC_assume((x14 <= 255)&&(x14 >=0));
int x15 = nondet_int();
__ESBMC_assume((x15 <= 255)&&(x15 >=0));
int x16 = nondet_int();
__ESBMC_assume((x16 <= 255)&&(x16 >=0));
int x17 = nondet_int();
__ESBMC_assume((x17 <= 255)&&(x17 >=0));
int x18 = nondet_int();
__ESBMC_assume((x18 <= 255)&&(x18 >=0));
int x19 = nondet_int();
__ESBMC_assume((x19 <= 255)&&(x19 >=0));
int x20 = nondet_int();
__ESBMC_assume((x20 <= 255)&&(x20 >=0));
int x21 = nondet_int();
__ESBMC_assume((x21 <= 255)&&(x21 >=0));
int x22 = nondet_int();
__ESBMC_assume((x22 <= 255)&&(x22 >=0));
int x23 = nondet_int();
__ESBMC_assume((x23 <= 255)&&(x23 >=0));
int x24 = nondet_int();
__ESBMC_assume((x24 <= 255)&&(x24 >=0));
int x25 = nondet_int();
__ESBMC_assume((x25 <= 255)&&(x25 >=0));


normDistance += (img[0]-x1)*(img[0]-x1);
normDistance += (img[1]-x2)*(img[1]-x2);
normDistance += (img[2]-x3)*(img[2]-x3);
normDistance += (img[3]-x4)*(img[3]-x4);
normDistance += (img[4]-x5)*(img[4]-x5);
normDistance += (img[5]-x6)*(img[5]-x6);
normDistance += (img[6]-x7)*(img[6]-x7);
normDistance += (img[7]-x8)*(img[7]-x8);
normDistance += (img[8]-x9)*(img[8]-x9);
normDistance += (img[9]-x10)*(img[9]-x10);
normDistance += (img[10]-x11)*(img[10]-x11);
normDistance += (img[11]-x12)*(img[11]-x12);
normDistance += (img[12]-x13)*(img[12]-x13);
normDistance += (img[13]-x14)*(img[13]-x14);
normDistance += (img[14]-x15)*(img[14]-x15);
normDistance += (img[15]-x16)*(img[15]-x16);
normDistance += (img[16]-x17)*(img[16]-x17);
normDistance += (img[17]-x18)*(img[17]-x18);
normDistance += (img[18]-x19)*(img[18]-x19);
normDistance += (img[19]-x20)*(img[19]-x20);
normDistance += (img[20]-x21)*(img[20]-x21);
normDistance += (img[21]-x22)*(img[21]-x22);
normDistance += (img[22]-x23)*(img[22]-x23);
normDistance += (img[23]-x24)*(img[23]-x24);
normDistance += (img[24]-x25)*(img[24]-x25);


#include <stdlib.h>
#include <stdio.h>

#define data 25
#define fc1 5
#define fc2 4
#define fc3 5

typedef enum cublasstatus { CUBLAS_STATUS_SUCCESS,
	CUBLAS_STATUS_NOT_INITIALIZED,
	CUBLAS_STATUS_ALLOC_FAILED,
	CUBLAS_STATUS_INVALID_VALUE,
	CUBLAS_STATUS_ARCH_MISMATCH,
	CUBLAS_STATUS_MAPPING_ERROR,
	CUBLAS_STATUS_EXECUTION_FAILED,
	CUBLAS_STATUS_INTERNAL_ERROR,
	CUBLAS_STATUS_NOT_SUPPORTED,
	CUBLAS_STATUS_LICENSE_ERROR} custatusResult;

typedef enum cublasstatus cublasStatus_t;
typedef struct cublashandle {
} cublasHandle_t;

typedef enum cublasoperation {CUBLAS_OP_N,
	CUBLAS_OP_T,
	CUBLAS_OP_C} cuoperation;

typedef enum cublasoperation cublasOperation_t;
//lookuptable of sigmoid function variating from -20 to 20 with .00 of resolution
float lookup[4000] = {0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,0.000000 ,
0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,
0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,
0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,
0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,
0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,
0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,
0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,
0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,
0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,
0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,0.000001 ,
0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,
0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,
0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,
0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,
0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,
0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,
0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,
0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,
0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,
0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,0.000002 ,
0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,
0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,
0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,
0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,
0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,
0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,
0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,
0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,
0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,
0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,0.000006 ,
0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,
0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,
0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,
0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,
0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,
0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,
0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,
0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,
0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,
0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,0.000017 ,
0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,
0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,
0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,
0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,
0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,
0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,
0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,
0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,
0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,
0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,0.000045 ,
0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,
0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,
0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,
0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,
0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,
0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,
0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,
0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,
0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,
0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,0.000123 ,
0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,
0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,
0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,
0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,
0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,
0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,
0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,
0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,
0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,
0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,0.000335 ,
0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,
0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,
0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,
0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,
0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,
0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,
0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,
0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,
0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,
0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,0.000911 ,
0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,
0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,
0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,
0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,
0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,
0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,
0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,
0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,
0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,
0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,0.002473 ,
0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,
0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,
0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,
0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,
0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,
0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,
0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,
0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,
0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,
0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,0.006693 ,
0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,
0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,
0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,
0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,
0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,
0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,
0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,
0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,
0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,
0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,0.017986 ,
0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,
0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,
0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,
0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,
0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,
0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,
0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,
0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,
0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,
0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,0.047426 ,
0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,
0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,
0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,
0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,
0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,
0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,
0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,
0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,
0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,
0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,0.119203 ,
0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,
0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,
0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,
0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,
0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,
0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,
0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,
0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,
0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,
0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,0.268941 ,
0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,
0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,
0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,
0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,
0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,
0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,
0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,
0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,
0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,
0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,0.500000 ,
0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,
0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,
0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,
0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,
0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,
0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,
0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,
0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,
0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,
0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,0.731059 ,
0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,
0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,
0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,
0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,
0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,
0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,
0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,
0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,
0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,
0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,0.880797 ,
0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,
0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,
0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,
0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,
0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,
0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,
0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,
0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,
0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,
0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,0.952574 ,
0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,
0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,
0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,
0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,
0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,
0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,
0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,
0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,
0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,
0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,0.982014 ,
0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,
0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,
0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,
0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,
0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,
0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,
0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,
0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,
0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,
0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,0.993307 ,
0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,
0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,
0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,
0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,
0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,
0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,
0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,
0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,
0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,
0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,0.997527 ,
0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,
0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,
0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,
0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,
0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,
0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,
0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,
0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,
0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,
0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,0.999089 ,
0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,
0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,
0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,
0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,
0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,
0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,
0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,
0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,
0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,
0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,0.999665 ,
0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,
0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,
0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,
0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,
0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,
0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,
0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,
0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,
0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,
0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,0.999877 ,
0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,
0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,
0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,
0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,
0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,
0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,
0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,
0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,
0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,
0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,0.999955 ,
0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,
0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,
0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,
0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,
0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,
0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,
0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,
0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,
0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,
0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,0.999983 ,
0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,
0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,
0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,
0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,
0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,
0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,
0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,
0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,
0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,
0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,0.999994 ,
0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,
0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,
0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,
0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,
0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,
0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,
0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,
0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,
0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,
0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,0.999998 ,
0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,
0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,
0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,
0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,
0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,
0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,
0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,
0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,
0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,
0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,0.999999 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,
1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 ,1.000000 };

float sqrtt(float num)
{
    float guess, e, upperbound;
    guess = 1;
    e = 0.001;
    do
    {
        upperbound = num / guess;
        guess = (upperbound + guess) / 2;
    } while (!(guess * guess >= num - e &&
               guess * guess <= num + e));
    return guess;
}

int isCloseEnough(float* img, float b) {
		int i = 0;
		float normDistance = 0;
		float x1 = nondet_float();
		__ESBMC_assume((x1 <= 1)&&(x1 >=0));
		float x2 = nondet_float();
		__ESBMC_assume((x2 <= 1)&&(x2 >=0));
		float x3 = nondet_float();
		__ESBMC_assume((x3 <= 1)&&(x3 >=0));
		float x4 = nondet_float();
		__ESBMC_assume((x4 <= 1)&&(x4 >=0));
		float x5 = nondet_float();
		__ESBMC_assume((x5 <= 1)&&(x5 >=0));
		float x6 = nondet_float();
		__ESBMC_assume((x6 <= 1)&&(x6 >=0));
		float x7 = nondet_float();
		__ESBMC_assume((x7 <= 1)&&(x7 >=0));
		float x8 = nondet_float();
		__ESBMC_assume((x8 <= 1)&&(x8 >=0));
		float x9 = nondet_float();
		__ESBMC_assume((x9 <= 1)&&(x9 >=0));
		float x10 = nondet_float();
		__ESBMC_assume((x10 <= 1)&&(x10 >=0));
		float x11 = nondet_float();
		__ESBMC_assume((x11 <= 1)&&(x11 >=0));
		float x12 = nondet_float();
		__ESBMC_assume((x12 <= 1)&&(x12 >=0));
		float x13 = nondet_float();
		__ESBMC_assume((x13 <= 1)&&(x13 >=0));
		float x14 = nondet_float();
		__ESBMC_assume((x14 <= 1)&&(x14 >=0));
		float x15 = nondet_float();
		__ESBMC_assume((x15 <= 1)&&(x15 >=0));
		float x16 = nondet_float();
		__ESBMC_assume((x16 <= 1)&&(x16 >=0));
		float x17 = nondet_float();
		__ESBMC_assume((x17 <= 1)&&(x17 >=0));
		float x18 = nondet_float();
		__ESBMC_assume((x18 <= 1)&&(x18 >=0));
		float x19 = nondet_float();
		__ESBMC_assume((x19 <= 1)&&(x19 >=0));
		float x20 = nondet_float();
		__ESBMC_assume((x20 <= 1)&&(x20 >=0));
		float x21 = nondet_float();
		__ESBMC_assume((x21 <= 1)&&(x21 >=0));
		float x22 = nondet_float();
		__ESBMC_assume((x22 <= 1)&&(x22 >=0));
		float x23 = nondet_float();
		__ESBMC_assume((x23 <= 1)&&(x23 >=0));
		float x24 = nondet_float();
		__ESBMC_assume((x24 <= 1)&&(x24 >=0));
		float x25 = nondet_float();
		__ESBMC_assume((x25 <= 1)&&(x25 >=0));


		normDistance += (img[0]-x1)*(img[0]-x1);
		normDistance += (img[1]-x2)*(img[1]-x2);
		normDistance += (img[2]-x3)*(img[2]-x3);
		normDistance += (img[3]-x4)*(img[3]-x4);
		normDistance += (img[4]-x5)*(img[4]-x5);
		normDistance += (img[5]-x6)*(img[5]-x6);
		normDistance += (img[6]-x7)*(img[6]-x7);
		normDistance += (img[7]-x8)*(img[7]-x8);
		normDistance += (img[8]-x9)*(img[8]-x9);
		normDistance += (img[9]-x10)*(img[9]-x10);
		normDistance += (img[10]-x11)*(img[10]-x11);
		normDistance += (img[11]-x12)*(img[11]-x12);
		normDistance += (img[12]-x13)*(img[12]-x13);
		normDistance += (img[13]-x14)*(img[13]-x14);
		normDistance += (img[14]-x15)*(img[14]-x15);
		normDistance += (img[15]-x16)*(img[15]-x16);
		normDistance += (img[16]-x17)*(img[16]-x17);
		normDistance += (img[17]-x18)*(img[17]-x18);
		normDistance += (img[18]-x19)*(img[18]-x19);
		normDistance += (img[19]-x20)*(img[19]-x20);
		normDistance += (img[20]-x21)*(img[20]-x21);
		normDistance += (img[21]-x22)*(img[21]-x22);
		normDistance += (img[22]-x23)*(img[22]-x23);
		normDistance += (img[23]-x24)*(img[23]-x24);
		normDistance += (img[24]-x25)*(img[24]-x25);

		normDistance = sqrtt(normDistance);
			if(normDistance <= b)
				return 1;
			else
				return 0;
}

float sigmoidLUT(float u){
  int index = 0;
  index =(int) u*100;
  index = index+ 2000;
  if(index < 0)
    return 0;
  else if(index > 4000)
    return 1;
  else
    return lookup[index];
}

void activeSigmoidLUT(float* layer, int sizeLayer) {
    int i = 0;
    for(i=0;i<sizeLayer;i++) {
      layer[i] = sigmoidLUT(layer[i]);
    }
}

void normalizef(float* image, int size) {
	int i = 0;
	for(i=0;i<size;i++) {
			image[i] = image[i]/255;
	}
}

cublasStatus_t cublasSgemm(cublasHandle_t handle,
			cublasOperation_t transa, cublasOperation_t transb,
			int m, int n, int k,
			const float *alpha,
			const float *A, int lda,
			const float *B, int ldb,
			const float *beta,
			float *C, int ldc) {
	int contadorX = 0, contadorY = 0;
	int contadorZ = 0;
	float result = 0;
	//__ESBMC_assert(lda == m || lda == k, "The leading dimensions doens't correspond to matrix A dimensions. Array out of bounds.");
	//__ESBMC_assert(ldb == k || ldb == n, "The leading dimensions doens't correspond to matrix B dimensions. Array out of bounds.");
	//__ESBMC_assert(ldc == m || ldc == k, "The leading dimensions doens't correspond to matrix C dimensions. Array out of bounds.");
	if ((transa == CUBLAS_OP_N) && (transb == CUBLAS_OP_N)) {
		result = 0;
		for(contadorZ=0; contadorZ<m; contadorZ++){
			for(contadorY=0; contadorY<n; contadorY++) {
				result = 0;
				for(contadorX=0;contadorX<k; contadorX++) {
					//result =  (A[contadorX + contadorY*k] * B[contadorX*n + contadorY]) + result;
					result =  (A[contadorX + contadorZ*lda] * B[contadorX*ldb + contadorY]) + result;
					}
				C[contadorY + contadorZ*ldc] = alpha[0]*result + beta[0]*C[contadorY + contadorZ*ldc];
			}
		}
	}

	else if ((transa == CUBLAS_OP_N) && (transb == CUBLAS_OP_T)) {
		result = 0;
		for(contadorZ=0; contadorZ<m; contadorZ++){
			for(contadorY=0; contadorY<n; contadorY++) {
				result = 0;
				for(contadorX=0;contadorX<k; contadorX++) {
					//result =  (A[contadorX + contadorY*k] * B[contadorX*n + contadorY]) + result;
					result =  (A[contadorX + contadorZ*k] * B[contadorX + contadorY*n]) + result;
					}
				C[contadorY + contadorZ*m] = alpha[0]*result + beta[0]*C[contadorY + contadorZ*m];
			}
		}
	}
	else if ((transa == CUBLAS_OP_T) && (transb == CUBLAS_OP_N)) {
		result = 0;
		for(contadorZ=0; contadorZ<m; contadorZ++){
			for(contadorY=0; contadorY<n; contadorY++) {
				result = 0;
				for(contadorX=0;contadorX<k; contadorX++) {
					//result =  (A[contadorX + contadorY*k] * B[contadorX*n + contadorY]) + result;
					result =  (A[contadorX*k + contadorZ] * B[contadorX*n + contadorY]) + result;
					}
				C[contadorY + contadorZ*m] = alpha[0]*result + beta[0]*C[contadorY + contadorZ*m];
			}
		}
	}
	else if ((transa == CUBLAS_OP_T) && (transb == CUBLAS_OP_T)) {
		result = 0;
		for(contadorZ=0; contadorZ<m; contadorZ++){
			for(contadorY=0; contadorY<n; contadorY++) {
				result = 0;
				for(contadorX=0;contadorX<k; contadorX++) {
					//result =  (A[contadorX + contadorY*k] * B[contadorX*n + contadorY]) + result;
					result =  (A[contadorX*k + contadorZ] * B[contadorX + contadorY*n]) + result;
					}
				C[contadorY + contadorZ*m] = alpha[0]*result + beta[0]*C[contadorY + contadorZ*m];
			}
		}

	}
	return CUBLAS_STATUS_SUCCESS;

}

cublasStatus_t cublasCreate(cublasHandle_t *handle) {
/*
This function initializes the CUBLAS library and creates a handle to an opaque structure holding the CUBLAS library context. It allocates hardware resources on the host and device and must be called prior to making any other CUBLAS library calls. The CUBLAS library context is tied to the current CUDA device. To use the library on multiple devices, one CUBLAS handle needs to be created for each device. Furthermore, for a given device, multiple CUBLAS handles with different configuration can be created. Because cublasCreate allocates some internal resources and the release of those resources by calling cublasDestroy will implicitly call cublasDeviceSynchronize, it is recommended to minimize the number of cublasCreate/cublasDestroy occurences. For multi-threaded applications that use the same device from different threads, the recommended programming model is to create one CUBLAS handle per thread and use that CUBLAS handle for the entire life of the thread.
*/
	return CUBLAS_STATUS_SUCCESS;
}

void imprimeResultante(float* matriz, int size) {
int cont = 0;
        for(cont = 0; cont < size; cont++) {
                printf("resultante: %d com valor: %.6f \n", cont, matriz[cont]);
        }
        //printf("limiar de ativacao da posicao: %d com valor: %.2f \n", cont, pesosSinapticos[xn]);
}

void checkNNLUT(float wfc1[125], float bfc1[5], float wfc2[20], float bfc2[4], float wfc3[20], float bfc3[5], float img[25]) {

//	float *x1layer1;
//	float *x1layer2;
//	float *x1layer3;
//	float *x2layer1;
//	float *x2layer2;
//	float *x2layer3;
	float alpha;
	float beta;
	//float* dev_result;

	//initializing cublas handle
	cublasHandle_t cublasHandle;
	cublasCreate(&cublasHandle);

	alpha = 1;
	beta = 0;
	/* sets the size of v */
	//data = (float*)malloc(data*sizeof(float));
	float onevec[25] = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};

	//wfc1 = (float*)malloc(data*fc1*sizeof(float));


	//x1layer1 = (float*)malloc(fc1*sizeof(float));

	//x1layer2 = (float*)malloc(fc2*sizeof(float));

	//x1layer3 = (float*)malloc(fc3*sizeof(float));

	//x2layer1 = (float*)malloc(fc1*sizeof(float));

	//x2layer2 = (float*)malloc(fc2*sizeof(float));

	//x2layer3 = (float*)malloc(fc3*sizeof(float));


		float x1layer1[5] = {0,0,0,0,0};

		float x1layer2[4]= {0,0,0,0} ;

		float x1layer3[5]= {0,0,0,0,0};


  normalizef(img, 25); // ponteiro da entrada e tamanho da imagem
	cublasSgemm(cublasHandle,
			CUBLAS_OP_N, CUBLAS_OP_N,
			fc1, 1, data,
			&alpha,
			wfc1, data,
			img, 1,
			&beta,
			x1layer1, 1);

	cublasSgemm(cublasHandle,
      CUBLAS_OP_N, CUBLAS_OP_N,
      fc1, 1, 1,
      &alpha,
      bfc1, 1,
      onevec, 1,
      &alpha,
      x1layer1, 1);

	//imprimeResultante(x1layer1, fc1);
	activeSigmoidLUT(x1layer1, fc1);
//	imprimeResultante(x1layer1, fc1);

//Computing the first layer of the second image x2 on the same Neural Network

    cublasSgemm(cublasHandle,
      CUBLAS_OP_N, CUBLAS_OP_N,
      fc2, 1, fc1,
      &alpha,
      wfc2, fc1,
      x1layer1, 1,
      &beta,
      x1layer2, 1);

  cublasSgemm(cublasHandle,
      CUBLAS_OP_N, CUBLAS_OP_N,
      fc2, 1, 1,
      &alpha,
      bfc2, 1,
      onevec, 1,
      &alpha,
      x1layer2, 1);

	//imprimeResultante(x1layer2, fc2);
	activeSigmoidLUT(x1layer2, fc2);
//	imprimeResultante(x1layer2, fc2);

	//Computing the second layer of the second image on the same Neural network


  cublasSgemm(cublasHandle,
      CUBLAS_OP_N, CUBLAS_OP_N,
      fc3, 1, fc2,
      &alpha,
      wfc3, fc2,
      x1layer2, 1,
      &beta,
      x1layer3, 1);

  cublasSgemm(cublasHandle,
    	CUBLAS_OP_N, CUBLAS_OP_N,
    	fc3, 1, 1,
    	&alpha,
    	bfc3, 1,
    	onevec, 1,
    	&alpha,
    	x1layer3, 1);

	//imprimeResultante(x1layer3, fc3);
	activeSigmoidLUT(x1layer3, fc3);
	imprimeResultante(x1layer3, fc3);
//	float a[3] = {0.8, 0.8, 0.8};
	//Computing the third layer of the second image on the same Neural network
	__ESBMC_assert(x1layer3[4] > 0.5, "Image is not a U");


}
